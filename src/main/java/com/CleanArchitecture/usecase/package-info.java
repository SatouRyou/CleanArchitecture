/**
 * Created by teradashoutarou on 2016/09/03.
 * 以下の記述を行うパッケージ
 * 　１.一つのクラス、一つのメソッドは単一の役割のみこなすべきである
 * 　　しかし、そうは言っても、保存と取得を同時に行いたいというケースは存在する
 * 　　なので処理自体はdomain層に記載し、uusecaseから個別にその処理を呼び出すようにする
 * 　　内部でのcontrlle的な立ち位置になりうる
 *
 * 　
 *  ２.クリーンアーキテクチャはアーキテクトの仕組みを円形にして表しており、
 *  　　内部の記述が外部の記述に依存してはいけない
 *  　　しかし、外部サービスのアクセスする、DBからデータを取得する際には
 *  　　外部の記述を呼び出さなければいけなくなる。
 *  　　これを会主するために、usecase層(domain層でも可能)に
 *  　　インターフェエースを保持させることで、
 *  　　アクセスはあくまで、同一層の中のインターフェースを呼び出し、
 *  　　インターフェースを通して外部の層にアクセスする
 *  　　この考え方をDIPの原則と言います
 *
 *  上記の理由で作られたパッケージなので、規模が小さいプロジェクトの場合は
 *  不要となる場合があります。
 *  逆に規模が多い場合は、新たに階層を設ける必要があります。
 */
package com.CleanArchitecture.usecase;